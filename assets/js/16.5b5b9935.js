(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{615:function(e,n,p){"use strict";p.r(n);var a=p(5),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,p=e._self._c||n;return p("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[p("p",[e._v("构建时间优化\n首先就是构建时间的优化了\nthread-loader\n多进程打包，可以大大提高构建的速度，使用方法是将thread-loader放在比较费时间的loader之前，比如babel-loader")]),e._v(" "),p("p",[e._v("由于启动项目和打包项目都需要加速，所以配置在webpack.base.js")]),e._v(" "),p("p",[e._v("npm i thread-loader -D")]),e._v(" "),p("p",[e._v("// webpack.base.js")]),e._v(" "),p("p",[e._v("{\ntest: /.js$/,\nuse: [\n'thread-loader',\n'babel-loader'\n],\n}\n}")]),e._v(" "),p("p",[e._v("cache-loader\n缓存资源，提高二次构建的速度，使用方法是将cache-loader放在比较费时间的loader之前，比如babel-loader")]),e._v(" "),p("p",[e._v("由于启动项目和打包项目都需要加速，所以配置在webpack.base.js")]),e._v(" "),p("p",[e._v("npm i cache-loader -D")]),e._v(" "),p("p",[e._v("// webpack.base.js")]),e._v(" "),p("p",[e._v("{\ntest: /.js$/,\nuse: [\n'cache-loader',\n'thread-loader',\n'babel-loader'\n],\n},")]),e._v(" "),p("p",[e._v("开启热更新\n比如你修改了项目中某一个文件，会导致整个项目刷新，这非常耗时间。如果只刷新修改的这个模块，其他保持原状，那将大大提高修改代码的重新构建时间")]),e._v(" "),p("p",[e._v("只用于开发中，所以配置在webpack.dev.js")]),e._v(" "),p("p",[e._v("// webpack.dev.js")]),e._v(" "),p("p",[e._v("//引入webpack\nconst webpack = require('webpack');\n//使用webpack提供的热更新插件\nplugins: [\nnew webpack.HotModuleReplacementPlugin()\n],\n//最后需要在我们的devserver中配置\ndevServer: {")]),e._v(" "),p("ul",[p("li",[p("div",{staticClass:"language- extra-class"},[p("pre",[p("code",[e._v("hot: true\n")])])]),e._v("},")])]),e._v(" "),p("p",[e._v("exclude & include")]),e._v(" "),p("p",[e._v("exclude：不需要处理的文件\ninclude：需要处理的文件")]),e._v(" "),p("p",[e._v("合理设置这两个属性，可以大大提高构建速度")]),e._v(" "),p("p",[e._v("在webpack.base.js中配置")]),e._v(" "),p("p",[e._v("// webpack.base.js")]),e._v(" "),p("div",{staticClass:"language- extra-class"},[p("pre",[p("code",[e._v("  {\n    test: /\\.js$/,\n    //使用include来指定编译文件夹\n    include: path.resolve(__dirname, '../src'),\n    //使用exclude排除指定文件夹\n    exclude: /node_modules/,\n    use: [\n      'babel-loader'\n    ]\n  },\n")])])]),p("p",[e._v("构建区分环境\n区分环境去构建是非常重要的，我们要明确知道，开发环境时我们需要哪些配置，不需要哪些配置；而最终打包生产环境时又需要哪些配置，不需要哪些配置：")]),e._v(" "),p("p",[e._v("开发环境：去除代码压缩、gzip、体积分析等优化的配置，大大提高构建速度\n生产环境：需要代码压缩、gzip、体积分析等优化的配置，大大降低最终项目打包体积")]),e._v(" "),p("p",[e._v("上篇文章已经带大家进行了环境区分")]),e._v(" "),p("p",[e._v("提升webpack版本\nwebpack版本越新，打包的效果肯定更好\n打包体积优化\n主要是打包后项目整体体积的优化，有利于项目上线后的页面加载速度提升")]),e._v(" "),p("p",[e._v("本项目已经是webpack最新版本")]),e._v(" "),p("p",[e._v("CSS代码压缩\nCSS代码压缩使用css-minimizer-webpack-plugin，效果包括压缩、去重")]),e._v(" "),p("p",[e._v("代码的压缩比较耗时间，所以只用在打包项目时，所以只需要在webpack.prod.js中配置")]),e._v(" "),p("p",[e._v("npm i css-minimizer-webpack-plugin -D")]),e._v(" "),p("p",[e._v("// webpack.prod.js")]),e._v(" "),p("p",[e._v("const CssMinimizerPlugin = require('css-minimizer-webpack-plugin')")]),e._v(" "),p("p",[e._v("optimization: {\nminimizer: [\nnew CssMinimizerPlugin(), // 去重压缩css\n],\n}")]),e._v(" "),p("p",[e._v("JS代码压缩\nJS代码压缩使用terser-webpack-plugin，实现打包后JS代码的压缩")]),e._v(" "),p("p",[e._v("代码的压缩比较耗时间，所以只用在打包项目时，所以只需要在webpack.prod.js中配置")]),e._v(" "),p("p",[e._v("npm i terser-webpack-plugin -D")]),e._v(" "),p("p",[e._v("// webpack.prod.js")]),e._v(" "),p("p",[e._v("const TerserPlugin = require('terser-webpack-plugin')")]),e._v(" "),p("p",[e._v("optimization: {\nminimizer: [\nnew CssMinimizerPlugin(), // 去重压缩css\nnew TerserPlugin({ // 压缩JS代码\nterserOptions: {\ncompress: {\ndrop_console: true, // 去除console\n},\n},\n}), // 压缩JavaScript\n],\n}")]),e._v(" "),p("p",[e._v("tree-shaking\ntree-shaking简单说作用就是：只打包用到的代码，没用到的代码不打包，而webpack5默认开启tree-shaking，当打包的mode为production时，自动开启tree-shaking进行优化\nmodule.exports = {\nmode: 'production'\n}")]),e._v(" "),p("p",[e._v("source-map类型\nsource-map的作用是：方便你报错的时候能定位到错误代码的位置。它的体积不容小觑，所以对于不同环境设置不同的类型是很有必要的。")]),e._v(" "),p("p",[e._v("开发环境")]),e._v(" "),p("p",[e._v("开发环境的时候我们需要能精准定位错误代码的位置\n// webpack.dev.js")]),e._v(" "),p("p",[e._v("module.exports = {\nmode: 'development',\ndevtool: 'eval-cheap-module-source-map'\n}")]),e._v(" "),p("p",[e._v("生产环境")]),e._v(" "),p("p",[e._v("生产环境，我们想开启source-map，但是又不想体积太大，那么可以换一种类型\n// webpack.prod.js")]),e._v(" "),p("p",[e._v("module.exports = {\nmode: 'production',\ndevtool: 'nosources-source-map'\n}")]),e._v(" "),p("p",[e._v("打包体积分析\n使用webpack-bundle-analyzer可以审查打包后的体积分布，进而进行相应的体积优化")]),e._v(" "),p("p",[e._v("只需要打包时看体积，所以只需在webpack.prod.js中配置")]),e._v(" "),p("p",[e._v("npm i webpack-bundle-analyzer -D")]),e._v(" "),p("p",[e._v("// webpack.prod.js")]),e._v(" "),p("p",[e._v("const {\nBundleAnalyzerPlugin\n} = require('webpack-bundle-analyzer')")]),e._v(" "),p("p",[e._v("plugins: [\nnew BundleAnalyzerPlugin(),\n]")]),e._v(" "),p("p",[e._v("用户体验优化\n模块懒加载\n如果不进行模块懒加载的话，最后整个项目代码都会被打包到一个js文件里，单个js文件体积非常大，那么当用户网页请求的时候，首屏加载时间会比较长，使用模块懒加载之后，大js文件会分成多个小js文件，网页加载时会按需加载，大大提升首屏加载速度\n// src/router/index.js")]),e._v(" "),p("p",[e._v("const routes = [\n{\npath: '/login',\nname: 'login',\ncomponent: login\n},\n{\npath: '/home',\nname: 'home',\n// 懒加载\ncomponent: () => import('../views/home/home.vue'),\n},\n]")]),e._v(" "),p("p",[e._v("Gzip\n开启Gzip后，大大提高用户的页面加载速度，因为gzip的体积比原文件小很多，当然需要后端的配合，使用compression-webpack-plugin")]),e._v(" "),p("p",[e._v("只需要打包时优化体积，所以只需在webpack.prod.js中配置")]),e._v(" "),p("p",[e._v("npm i compression-webpack-plugin -D")]),e._v(" "),p("p",[e._v("// webpack.prod.js")]),e._v(" "),p("p",[e._v("const CompressionPlugin = require('compression-webpack-plugin')")]),e._v(" "),p("p",[e._v("plugins: [\n// 之前的代码...")]),e._v(" "),p("div",{staticClass:"language- extra-class"},[p("pre",[p("code",[e._v("// gzip\nnew CompressionPlugin({\n  algorithm: 'gzip',\n  threshold: 10240,\n  minRatio: 0.8\n})\n")])])]),p("p",[e._v("]")]),e._v(" "),p("p",[e._v("小图片转base64\n对于一些小图片，可以转base64，这样可以减少用户的http网络请求次数，提高用户的体验。webpack5中url-loader已被废弃，改用asset-module")]),e._v(" "),p("p",[e._v("在webpack.base.js中配置")]),e._v(" "),p("p",[e._v("// webpack.base.js")]),e._v(" "),p("p",[e._v("{\ntest: /.(png|jpe?g|gif|svg|webp)$/,\ntype: 'asset',\nparser: {\n// 转base64的条件\ndataUrlCondition: {\nmaxSize: 25 * 1024, // 25kb\n}\n},\ngenerator: {\n// 打包到 image 文件下\nfilename: 'images/[contenthash][ext][query]',\n},\n},")]),e._v(" "),p("p",[e._v("合理配置hash\n我们要保证，改过的文件需要更新hash值，而没改过的文件依然保持原本的hash值，这样才能保证在上线后，浏览器访问时没有改变的文件会命中缓存，从而达到性能优化的目的")]),e._v(" "),p("p",[e._v("在webpack.base.js中配置")]),e._v(" "),p("p",[e._v("// webpack.base.js")]),e._v(" "),p("p",[e._v("output: {\npath: path.resolve(__dirname, '../dist'),\n// 给js文件加上 contenthash\nfilename: 'js/chunk-[contenthash].js',\nclean: true,\n},")]),e._v(" "),p("p",[e._v("作者：Sunshine_Lin\n链接：https://juejin.cn/post/7083519723484708878\n来源：稀土掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])])}),[],!1,null,null,null);n.default=s.exports}}]);