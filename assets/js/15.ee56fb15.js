(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{613:function(s,n,e){"use strict";e.r(n);var a=e(5),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"了解proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#了解proxy"}},[s._v("#")]),s._v(" 了解Proxy")]),s._v(" "),e("blockquote",[e("p",[s._v("Proxy是ES6新推出的一个特性，可以用它去拦截js操作的方法，从而对这些方法进行代理操作。")])]),s._v(" "),e("h1",{attrs:{id:"用proxy重写上面的例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用proxy重写上面的例子"}},[s._v("#")]),s._v(" 用Proxy重写上面的例子")]),s._v(" "),e("p",[s._v("比如我们可以通过Proxy对上面的送情书情节进行重写:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const xiaowang = {\n  loveLetter: '我喜欢你，我想和你睡觉'\n}\nconst proxy = new Proxy(xiaowang, {\n  get(target,key) {\n    if(key === 'loveLetter') {\n      return target[key].replace('睡觉','一起在晨辉的沐浴下起床')\n    }\n  }\n})\n// 送给小姐姐情书\nfunction sendToMyLove(obj) {\n\tconsole.log(obj.loveLetter)\n\treturn '小伙子还挺有诗情画意的么，不过老娘不喜欢，滚'\n}\nconsole.log(sendToMyLove(proxy))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("再看这样一个场景\n请分别使用Object.defineProperty和Proxy完善下面的代码逻辑.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function observe(obj, callback) {}\n\nconst obj = observe(\n  {\n    name: '子君',\n    sex: '男'\n  },\n  (key, value) => {\n    console.log(`属性[${key}]的值被修改为[${value}]`)\n  }\n)\n\n// 这段代码执行后，输出 属性[name]的值被修改为[妹纸]\nobj.name = '妹纸'\n\n// 这段代码执行后，输出 属性[sex]的值被修改为[女]\nobj.sex = '女'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("看了上面的代码，希望大家可以先自行实现以下，下面我们分别用Object.defineProperty和Proxy去实现上面的逻辑.")]),s._v(" "),e("h2",{attrs:{id:"使用object-defineproperty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用object-defineproperty"}},[s._v("#")]),s._v(" 使用Object.defineProperty")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/**\n * 请实现这个函数，使下面的代码逻辑正常运行\n * @param {*} obj 对象\n * @param {*} callback 回调函数\n */\nfunction observe(obj, callback) {\n  const newObj = {}\n  Object.keys(obj).forEach(key => {\n    Object.defineProperty(newObj, key, {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return obj[key]\n      },\n      // 当属性的值被修改时，会调用set，这时候就可以在set里面调用回调函数\n      set(newVal) {\n        obj[key] = newVal\n        callback(key, newVal)\n      }\n    })\n  })\n  return newObj\n}\n\nconst obj = observe(\n  {\n    name: '子君',\n    sex: '男'\n  },\n  (key, value) => {\n    console.log(`属性[${key}]的值被修改为[${value}]`)\n  }\n)\n\n// 这段代码执行后，输出 属性[name]的值被修改为[妹纸]\nobj.name = '妹纸'\n\n// 这段代码执行后，输出 属性[sex]的值被修改为[女]\nobj.name = '女'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("h2",{attrs:{id:"使用proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用proxy"}},[s._v("#")]),s._v(" 使用Proxy")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function observe(obj, callback) {\n  return new Proxy(obj, {\n    get(target, key) {\n      return target[key]\n    },\n    set(target, key, value) {\n      target[key] = value\n      callback(key, value)\n    }\n  })\n}\n\nconst obj = observe(\n  {\n    name: '子君',\n    sex: '男'\n  },\n  (key, value) => {\n    console.log(`属性[${key}]的值被修改为[${value}]`)\n  }\n)\n\n// 这段代码执行后，输出 属性[name]的值被修改为[妹纸]\nobj.name = '妹纸'\n\n// 这段代码执行后，输出 属性[sex]的值被修改为[女]\nobj.name = '女'\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[s._v("通过上面两种不同实现方式，我们可以大概的了解到Object.defineProperty和Proxy的用法，但是当给对象添加新的属性的时候，区别就出来了，比如")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 添加公众号字段\nobj.gzh = '前端有的玩'\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("使用Object.defineProperty无法监听到新增属性，但是使用Proxy是可以监听到的。对比上面两段代码可以发现有以下几点不同")]),s._v(" "),e("blockquote",[e("ul",[e("li",[s._v("Object.defineProperty监听的是对象的每一个属性，而Proxy监听的是对象自身")]),s._v(" "),e("li",[s._v("使用Object.defineProperty需要遍历对象的每一个属性，对于性能会有一定的影响")]),s._v(" "),e("li",[s._v("Proxy对新增的属性也能监听到，但Object.defineProperty无法监听到。")])])]),s._v(" "),e("h2",{attrs:{id:"初识proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初识proxy"}},[s._v("#")]),s._v(" 初识Proxy")]),s._v(" "),e("blockquote",[e("p",[s._v("在MDN中，关于Proxy是这样介绍的: Proxy 对象用于定义基本操作的自定义行为（如属性查找、赋值、枚举、函数调用等）。什么意思呢？Proxy就像一个拦截器一样，它可以在读取对象的属性，修改对象的属性，获取对象属性列表，通过for in循环等等操作的时候，去拦截对象上面的默认行为，然后自己去自定义这些行为，比如上面例子中的set,我们通过拦截默认的set,然后在自定义的set里面添加了回调函数的调用\nProxy的语法格式如下")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/**\n* target: 要兼容的对象，可以是一个对象，数组,函数等等\n* handler: 是一个对象，里面包含了可以监听这个对象的行为函数，比如上面例子里面的`get`与`set`\n* 同时会返回一个新的对象proxy, 为了能够触发handler里面的函数，必须要使用返回值去进行其他操作，比如修改值\n*/\nconst proxy = new Proxy(target, handler)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("在上面的例子里面，我们已经使用到了handler里面提供的get与set方法了，接下来我们一一看一下handler里面的方法。")]),s._v(" "),e("h2",{attrs:{id:"handler-里面的方法列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handler-里面的方法列表"}},[s._v("#")]),s._v(" handler 里面的方法列表")]),s._v(" "),e("p",[s._v("handler里面的方法可以有以下这十三个，每一个都对应的一种或多种针对proxy代理对象的操作行为")]),s._v(" "),e("p",[s._v("handler.get\n当通过proxy去读取对象里面的属性的时候，会进入到get钩子函数里面")]),s._v(" "),e("p",[s._v("handler.set\n当通过proxy去为对象设置修改属性的时候，会进入到set钩子函数里面")]),s._v(" "),e("p",[s._v("handler.has\n当使用in判断属性是否在proxy代理对象里面时，会触发has，比如\nconst obj = {\nname: '子君'\n}\nconsole.log('name' in obj)")]),s._v(" "),e("p",[s._v("handler.deleteProperty\n当使用delete去删除对象里面的属性的时候，会进入deleteProperty`钩子函数")]),s._v(" "),e("p",[s._v("handler.apply\n当proxy监听的是一个函数的时候，当调用这个函数时，会进入apply钩子函数")]),s._v(" "),e("p",[s._v("handle.ownKeys\n当通过Object.getOwnPropertyNames,Object.getownPropertySymbols,Object.keys,Reflect.ownKeys去获取对象的信息的时候，就会进入ownKeys这个钩子函数")]),s._v(" "),e("p",[s._v("handler.construct\n当使用new操作符的时候，会进入construct这个钩子函数")]),s._v(" "),e("p",[s._v("handler.defineProperty\n当使用Object.defineProperty去修改属性修饰符的时候，会进入这个钩子函数")]),s._v(" "),e("p",[s._v("handler.getPrototypeOf\n当读取对象的原型的时候，会进入这个钩子函数")]),s._v(" "),e("p",[s._v("handler.setPrototypeOf\n当设置对象的原型的时候，会进入这个钩子函数")]),s._v(" "),e("p",[s._v("handler.isExtensible\n当通过Object.isExtensible去判断对象是否可以添加新的属性的时候，进入这个钩子函数")]),s._v(" "),e("p",[s._v("handler.preventExtensions\n当通过Object.preventExtensions去设置对象不可以修改新属性时候，进入这个钩子函数")]),s._v(" "),e("p",[s._v('handler.getOwnPropertyDescriptor\n在获取代理对象某个属性的属性描述时触发该操作，比如在执行 Object.getOwnPropertyDescriptor(proxy, "foo") 时会进入这个钩子函数')]),s._v(" "),e("p",[s._v("Proxy提供了十三种拦截对象操作的方法，本文主要挑选其中一部分在Vue3中比较重要的进行说明，其余的建议可以直接阅读MDN关于Proxy的介绍。")]),s._v(" "),e("h2",{attrs:{id:"详细介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细介绍"}},[s._v("#")]),s._v(" 详细介绍")]),s._v(" "),e("p",[s._v("get")]),s._v(" "),e("blockquote",[e("p",[s._v("当通过proxy去读取对象里面的属性的时候，会进入到get钩子函数里面\n当我们从一个proxy代理上面读取属性的时候，就会触发get钩子函数，get函数的结构如下")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/**\n * target: 目标对象，即通过proxy代理的对象\n * key: 要访问的属性名称\n * receiver: receiver相当于是我们要读取的属性的this,一般情况\n *           下他就是proxy对象本身，关于receiver的作用，后文将具体讲解\n */\nhandle.get(target,key, receiver)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),e("p",[s._v("我们在工作中经常会有封装axios的需求，在封装过程中，也需要对请求异常进行封装，比如不同的状态码返回的异常信息是不同的，如下是一部分状态码及其提示信息:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 状态码提示信息\nconst errorMessage = {\n  400: '错误请求',\n  401: '系统未授权，请重新登录',\n  403: '拒绝访问',\n  404: '请求失败，未找到该资源'\n}\n\n// 使用方式\nconst code = 404\nconst message = errorMessage[code]\nconsole.log(message)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("但这存在一个问题，状态码很多，我们不可能每一个状态码都去枚举出来，所以对于一些异常状态码，我们希望可以进行统一提示，如提示为系统异常，请联系管理员，这时候就可以使用Proxy对错误信息进行代理处理")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 状态码提示信息\nconst errorMessage = {\n  400: '错误请求',\n  401: '系统未授权，请重新登录',\n  403: '拒绝访问',\n  404: '请求失败，未找到该资源'\n}\n\nconst proxy = new Proxy(errorMessage, {\n  get(target,key) {\n    const value = target[key]\n    return value || '系统异常，请联系管理员'\n  }\n})\n\n// 输出 错误请求\nconsole.log(proxy[400])\n// 输出 系统异常，请联系管理员\nconsole.log(proxy[500])\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[s._v("#")]),s._v(" set")]),s._v(" "),e("blockquote",[e("p",[s._v("当为对象里面的属性赋值的时候，会触发set\n当给对象里面的属性赋值的时候，会触发set,set函数的结构如下")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/**\n * target: 目标对象，即通过proxy代理的对象\n * key: 要赋值的属性名称\n * value: 目标属性要赋的新值\n * receiver: 与 get的receiver 基本一致\n */\nhandle.set(target,key,value, receiver)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("p",[s._v("有的同学可能会有疑惑，我不会Proxy和Reflect就学不了Vue3.0了吗？其实懂不懂这个是不影响学习Vue3.0的，但是如果想深入 去理解Vue3.0，还是很有必要了解这些的。比如经常会有人在使用Vue2的时候问，为什么我数组通过索引修改值之后，界面没有变呢？当你了解到Object.defineProperty的使用方式与限制之后，就会恍然大悟，原来如此。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6861725116389130254",target:"_blank",rel:"noopener noreferrer"}},[s._v("原文链接"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);